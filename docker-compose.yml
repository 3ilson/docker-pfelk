version: '3.2'
services:
  elastic:
    container_name: elastic
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    hostname: elastic
    environment:
       - node.name=elastic
       - cluster.name=elastic-docker-cluster
       - bootstrap.memory_lock=true
       - ES_JAVA_OPTS= -Xms1G -Xmx1G
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elastic:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic

  logstash:
    container_name: logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - ./logstash/config/:/usr/share/logstash/config/
      - ./logstash/conf.d/:/usr/share/logstash/etc/logstash/conf.d/
      - ./logstash/conf.d/patterns/:/usr/share/logstash/etc/logstash/conf.d/patterns/
      - ./logstash/conf.d/templates/:/usr/share/logstash/etc/logstash/conf.d/templates/
      - ./logstash/conf.d/databases/:/usr/share/logstash/etc/logstash/conf.d/databases/
      - /usr/share/GeoIP/:/usr/share/logstash/GeoIP/
    ports:
      - "5000:5000"
      - "9600:9600"
      - "5140:5140/udp"
    environment:
      LS_JAVA_OPTS: -Xmx1G -Xms1G
    networks:
      - elastic
    depends_on:
      - elastic

  kibana:
    container_name: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elastic
    depends_on:
      - elastic

volumes:
  elastic:
    driver: local

networks:
  elastic:
    driver: bridge
